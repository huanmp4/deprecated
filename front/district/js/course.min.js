function Course(){this.InputBtn=$(".InputBtn")}Course.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{serverUrl:"/ueditor/upload/"})},Course.prototype.listenSubmitEvent=function(){$("#submit-btn").click(function(){var t=$("#title-input").val(),n=$("#category-input").val(),e=$("#teacher-input").val(),o=$("#video-input").val(),i=$("#cover-input").val(),u=$("#price-input").val(),r=$("#duration-input").val(),c=window.ue.getContent();yourajax.post({url:"/cms/course_cms_add",data:{title:t,video_url:o,cover_url:i,price:u,duration:r,profile:c,category_id:n,teacher_id:e},success:function(t){200===t.code&&(window.location=window.location.href)}})})},Course.prototype.listenInputEvent=function(){document.getElementById("InputBtn").addEventListener("input",function(){console.log("input event change")})},Course.prototype.consoleEvent=function(){console.log("input event change")},Course.prototype.Run=function(){this.initUEditor(),this.listenSubmitEvent()},$(function(){(new Course).Run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvdXJzZS5qcyJdLCJuYW1lcyI6WyJDb3Vyc2UiLCJ0aGlzIiwiSW5wdXRCdG4iLCIkIiwicHJvdG90eXBlIiwiaW5pdFVFZGl0b3IiLCJ3aW5kb3ciLCJ1ZSIsIlVFIiwiZ2V0RWRpdG9yIiwic2VydmVyVXJsIiwibGlzdGVuU3VibWl0RXZlbnQiLCJjbGljayIsInRpdGxlIiwidmFsIiwiY2F0ZWdvcnlfaWQiLCJ0ZWFjaGVyX2lkIiwidmlkZW9fdXJsIiwiY292ZXJfdXJsIiwicHJpY2UiLCJkdXJhdGlvbiIsInByb2ZpbGUiLCJnZXRDb250ZW50IiwieW91cmFqYXgiLCJwb3N0IiwidXJsIiwiZGF0YSIsInN1Y2Nlc3MiLCJyZXN1bHQiLCJsb2NhdGlvbiIsImhyZWYiLCJsaXN0ZW5JbnB1dEV2ZW50IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJjb25zb2xlIiwibG9nIiwiY29uc29sZUV2ZW50IiwiUnVuIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxTQUNMQyxLQUFLQyxTQUFXQyxFQUFFLGFBSXRCSCxPQUFPSSxVQUFVQyxZQUFjLFdBQzNCQyxPQUFPQyxHQUFLQyxHQUFHQyxVQUFVLFNBQVMsQ0FDOUJDLFVBQWEsc0JBSXJCVixPQUFPSSxVQUFVTyxrQkFBb0IsV0FDakJSLEVBQUUsZUFDUlMsTUFBTSxXQUNaLElBQUlDLEVBQVFWLEVBQUUsZ0JBQWdCVyxNQUMxQkMsRUFBY1osRUFBRSxtQkFBbUJXLE1BQ25DRSxFQUFhYixFQUFFLGtCQUFrQlcsTUFDakNHLEVBQVlkLEVBQUUsZ0JBQWdCVyxNQUM5QkksRUFBWWYsRUFBRSxnQkFBZ0JXLE1BQzlCSyxFQUFRaEIsRUFBRSxnQkFBZ0JXLE1BQzFCTSxFQUFXakIsRUFBRSxtQkFBbUJXLE1BQ2hDTyxFQUFVZixPQUFPQyxHQUFHZSxhQUV4QkMsU0FBU0MsS0FBSyxDQUNWQyxJQUFPLHNCQUNQQyxLQUFRLENBQ0piLE1BQVNBLEVBQ1RJLFVBQWFBLEVBQ2JDLFVBQWFBLEVBQ2JDLE1BQVNBLEVBQ1RDLFNBQVlBLEVBQ1pDLFFBQVdBLEVBQ1hOLFlBQWVBLEVBQ2ZDLFdBQWNBLEdBRWxCVyxRQUFXLFNBQVVDLEdBQ0ssTUFBbkJBLEVBQWEsT0FDWnRCLE9BQU91QixTQUFXdkIsT0FBT3VCLFNBQVNDLFlBUXREOUIsT0FBT0ksVUFBVTJCLGlCQUFtQixXQUVoQ0MsU0FBU0MsZUFBZSxZQUFZQyxpQkFBaUIsUUFDckQsV0FDSUMsUUFBUUMsSUFBSSx5QkFJcEJwQyxPQUFPSSxVQUFVaUMsYUFBZSxXQUM1QkYsUUFBUUMsSUFBSSx1QkFHaEJwQyxPQUFPSSxVQUFVa0MsSUFBTSxXQUNuQnJDLEtBQUtJLGNBQ0xKLEtBQUtVLHFCQU1UUixFQUFFLFlBQ2UsSUFBSUgsUUFDVnNDIiwiZmlsZSI6ImNvdXJzZS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBDb3Vyc2UoKXtcclxuICAgIHRoaXMuSW5wdXRCdG4gPSAkKCcuSW5wdXRCdG4nKTtcclxufVxyXG5cclxuXHJcbkNvdXJzZS5wcm90b3R5cGUuaW5pdFVFZGl0b3IgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB3aW5kb3cudWUgPSBVRS5nZXRFZGl0b3IoXCJlZGl0b3JcIix7XHJcbiAgICAgICAgJ3NlcnZlclVybCc6ICcvdWVkaXRvci91cGxvYWQvJ1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5Db3Vyc2UucHJvdG90eXBlLmxpc3RlblN1Ym1pdEV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHN1Ym1pdEJ0biA9ICQoXCIjc3VibWl0LWJ0blwiKTtcclxuICAgIHN1Ym1pdEJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIHRpdGxlID0gJChcIiN0aXRsZS1pbnB1dFwiKS52YWwoKTtcclxuICAgICAgICB2YXIgY2F0ZWdvcnlfaWQgPSAkKFwiI2NhdGVnb3J5LWlucHV0XCIpLnZhbCgpO1xyXG4gICAgICAgIHZhciB0ZWFjaGVyX2lkID0gJChcIiN0ZWFjaGVyLWlucHV0XCIpLnZhbCgpO1xyXG4gICAgICAgIHZhciB2aWRlb191cmwgPSAkKFwiI3ZpZGVvLWlucHV0XCIpLnZhbCgpO1xyXG4gICAgICAgIHZhciBjb3Zlcl91cmwgPSAkKFwiI2NvdmVyLWlucHV0XCIpLnZhbCgpO1xyXG4gICAgICAgIHZhciBwcmljZSA9ICQoXCIjcHJpY2UtaW5wdXRcIikudmFsKCk7XHJcbiAgICAgICAgdmFyIGR1cmF0aW9uID0gJChcIiNkdXJhdGlvbi1pbnB1dFwiKS52YWwoKTtcclxuICAgICAgICB2YXIgcHJvZmlsZSA9IHdpbmRvdy51ZS5nZXRDb250ZW50KCk7XHJcblxyXG4gICAgICAgIHlvdXJhamF4LnBvc3Qoe1xyXG4gICAgICAgICAgICAndXJsJzogJy9jbXMvY291cnNlX2Ntc19hZGQnLFxyXG4gICAgICAgICAgICAnZGF0YSc6IHtcclxuICAgICAgICAgICAgICAgICd0aXRsZSc6IHRpdGxlLFxyXG4gICAgICAgICAgICAgICAgJ3ZpZGVvX3VybCc6IHZpZGVvX3VybCxcclxuICAgICAgICAgICAgICAgICdjb3Zlcl91cmwnOiBjb3Zlcl91cmwsXHJcbiAgICAgICAgICAgICAgICAncHJpY2UnOiBwcmljZSxcclxuICAgICAgICAgICAgICAgICdkdXJhdGlvbic6IGR1cmF0aW9uLFxyXG4gICAgICAgICAgICAgICAgJ3Byb2ZpbGUnOiBwcm9maWxlLFxyXG4gICAgICAgICAgICAgICAgJ2NhdGVnb3J5X2lkJzogY2F0ZWdvcnlfaWQsXHJcbiAgICAgICAgICAgICAgICAndGVhY2hlcl9pZCc6IHRlYWNoZXJfaWRcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICBpZihyZXN1bHRbJ2NvZGUnXSA9PT0gMjAwKXtcclxuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5cclxuQ291cnNlLnByb3RvdHlwZS5saXN0ZW5JbnB1dEV2ZW50ID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiSW5wdXRCdG5cIikuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsIG15RnVuY3Rpb24pO1xyXG4gICAgZnVuY3Rpb24gbXlGdW5jdGlvbigpIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnaW5wdXQgZXZlbnQgY2hhbmdlJylcclxuICAgIH1cclxufTtcclxuXHJcbkNvdXJzZS5wcm90b3R5cGUuY29uc29sZUV2ZW50ID0gZnVuY3Rpb24oKXtcclxuICAgIGNvbnNvbGUubG9nKCdpbnB1dCBldmVudCBjaGFuZ2UnKVxyXG59O1xyXG5cclxuQ291cnNlLnByb3RvdHlwZS5SdW4gPSBmdW5jdGlvbigpe1xyXG4gICAgdGhpcy5pbml0VUVkaXRvcigpO1xyXG4gICAgdGhpcy5saXN0ZW5TdWJtaXRFdmVudCgpO1xyXG59O1xyXG5cclxuXHJcblxyXG5cclxuJChmdW5jdGlvbigpe1xyXG4gICAgdmFyIGNvdXJzZSA9IG5ldyBDb3Vyc2UoKTtcclxuICAgIGNvdXJzZS5SdW4oKTtcclxufSk7Il19
